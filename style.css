body,
ul,
li,
p {
  margin: 0px;
  padding: 0px;
  list-style: none;
  font-size: 1.2rem;
  font-family: Arial;
}

a {
  text-decoration: none;
  color: white;
}

body {
  margin-bottom: 100px;
}

h1 {
  text-align: center;
  margin-top: 100px;
}

img {
  max-width: 100%;
  display: block;
}

.header {
  background-color: black;
  display: flex;
  flex-wrap: wrap
    /*Quando a tela ficar pequena, o primeiro fica em cima do segundo.*/;
  justify-content: space-between; /*colacar cada um em um lado*/
  padding: 20px;
  align-items: center; /*Para os 2 itens ficarem no mesmo nivel um do outro */
}

.menu {
  display: flex; /*para ficar um do lado do outro, os itens de menu*/
}

.menu li {
  margin-left: 15px; /*Separar os itens*/
}

.menu li a {
  display: block; /*Diferente do display: inline, o display: block permite mudar
  altura, largurra, e outras coisas mais*/
  padding: 10px;
}

.flex {
  display: flex;
  flex-wrap: wrap;
  max-width: 1000px;
  margin: 0 auto;
}

.flex > div {
  flex: 1 1 200px;
  margin: 10px;
}

/* CSS Grid 1 */

.grid1 {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  max-width: 980px;
  padding: 10px;
  margin: 0 auto;
  grid-gap: 20px;
}

.grid1 div:nth-child(n + 4) {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: 10px;
  align-items: center;
}

.grid1 div.anuncio {
  grid-column: 1; /*elemento fica na primeira coluna*/
  grid-row: 2 / 5; /*elemento ocupa da linha 2 ate a linha 5*/
  display: block;
}

/*Utilizando media query para deixar responsivo. O que for abaixo de 600px
aplica os seguintes estilos:*/

@media (max-width: 600px) {
  .grid1 {
    grid-template-columns: 1fr 1fr;
  }
  .grid1 div:nth-child(n + 4) {
    display: block; /*Isso funciona pois cancela as definicoes de linhas, colunas
     e alinhamento, que sao propriedades do grid, não do block.*/
  }

  .grid1 div.anuncio {
    grid-row: auto; /*Se posiciona automaticamente, para nao ocupar espaço a a toa*/
    grid-column: auto;
    order: -1; /*faz o elemento aparecer primeiro*/
  }
}

/* Css Grid 2*/

.grid2 {
  display: grid;
  grid-template-columns: 1fr 200px;
  grid-gap: 20px;
  max-width: 800px;
  padding: 10px;
  margin: 0 auto;
}

.sidebar div {
  margin-bottom: 10px;
}

@media (max-width: 600px) {
  .grid2 {
    grid-template-columns: 1fr;
  }

  .sidebar {
    display: flex;
    overflow: scroll; /*funciona bem no mobile*/
  }

  .sidebar div {
    flex: 1 0 200px;
    margin: 0 10px;
  }
}

.grid3 {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-gap: 20px;
  margin: 0 auto;
  max-width: 800px;
  padding: 10px;
}

.grid3-item:nth-child(1) {
  grid-row: 1 / 3;
}

.grid3-item {
  display: grid;
}

.grid3-item img {
  grid-column: 1;
  grid-row: 1/3;
  align-self: end;
}

.grid3-item p {
  background: rgba(0, 0, 0, 0.6);
  padding: 10px;
  color: white;
  grid-column: 1;
  grid-row: 2;
  align-self: end;
}
